import React, { useEffect, useState } from 'react';
import './cards.css';

const Cards = () => {
  const [sensors, setSensors] = useState([]);

  // Hente data fra API
  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('http://localhost:8884/api/sensors');
        const data = await response.json();

        console.log("Data fra API:", data); // Logg API-responsen

        if (data && data.sensors && Array.isArray(data.sensors)) {
          const validSensors = data.sensors.filter(sensor => 
            sensor.Latitude && sensor.Longitude && sensor.Temp && sensor.ID
          );

          console.log("Gyldige sensorer:", validSensors); // Logg gyldige sensorer

          // Velg de første 4 gyldige sensorene
          setSensors(validSensors.slice(0, 4));
        } else {
          console.error("Forventet 'sensors' nøkkel med en array, men fikk noe annet:", data);
        }
      } catch (error) {
        console.error('Error fetching sensor data:', error);
      }
    };

    fetchData();
  }, []);

  return (
    <div className='cards_box'>
      {sensors.map((sensor, index) => (
        <div className="card" key={sensor.ID}>
          <h1 className='card_title'>{`${sensor.ID}`}</h1>
          <p className='card_temp'>{sensor.Temp !== null ? `${sensor.Temp}°C` : 'Laster temperatur...'}</p>
          <svg className='card_icon' width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3.33334 30V26.6667C4.3889 26.6667 5.1739 26.3889 5.68834 25.8333C6.20279 25.2778 7.2789 25 8.91668 25C10.5545 25 11.6311 25.2778 12.1467 25.8333C12.6622 26.3889 13.4189 26.6667 14.4167 26.6667C15.4722 26.6667 16.2572 26.3889 16.7717 25.8333C17.2861 25.2778 18.3622 25 20 25C21.5833 25 22.66 25.2778 23.23 25.8333C23.8 26.3889 24.5845 26.6667 25.5833 26.6667C26.6389 26.6667 27.41 26.3889 27.8967 25.8333C28.3833 25.2778 29.4456 25 31.0833 25C32.7211 25 33.7978 25.2778 34.3133 25.8333C34.8289 26.3889 35.6133 26.6667 36.6667 26.6667V30C35.0833 30 34.0072 29.7222 33.4383 29.1667C32.8695 28.6111 32.0845 28.3333 31.0833 28.3333C30.0822 28.3333 29.3256 28.6111 28.8133 29.1667C28.3011 29.7222 27.2245 30 25.5833 30C24 30 22.9239 29.7222 22.355 29.1667C21.7861 28.6111 21.0011 28.3333 20 28.3333C18.9445 28.3333 18.16 28.6111 17.6467 29.1667C17.1333 29.7222 16.0567 30 14.4167 30C12.7767 30 11.7145 29.7222 11.23 29.1667C10.7456 28.6111 9.97445 28.3333 8.91668 28.3333C7.8589 28.3333 7.07445 28.6111 6.56334 29.1667C6.05223 29.7222 4.97557 30 3.33334 30ZM3.33334 23.3333V20C4.3889 20 5.1739 19.7222 5.68834 19.1667C6.20279 18.6111 7.2789 18.3333 8.91668 18.3333C10.5 18.3333 11.5628 18.6111 12.105 19.1667C12.6472 19.7222 13.4178 20 14.4167 20C15.4722 20 16.2567 19.7222 16.77 19.1667C17.2833 18.6111 18.36 18.3333 20 18.3333C21.5833 18.3333 22.6528 18.6111 23.2083 19.1667C23.7639 19.7222 24.5278 20 25.5 20C26.5556 20 27.34 19.7222 27.8533 19.1667C28.3667 18.6111 29.4433 18.3333 31.0833 18.3333C32.6667 18.3333 33.7433 18.6111 34.3133 19.1667C34.8833 19.7222 35.6678 20 36.6667 20V23.3333C35.0278 23.3333 33.9372 23.0555 33.395 22.5C32.8528 21.9444 32.0822 21.6667 31.0833 21.6667C30.0845 21.6667 29.3278 21.9444 28.8133 22.5C28.2989 23.0555 27.2222 23.3333 25.5833 23.3333C24 23.3333 22.9239 23.0555 22.355 22.5C21.7861 21.9444 21.0011 21.6667 20 21.6667C18.9445 21.6667 18.1733 21.9444 17.6867 22.5C17.2 23.0555 16.1378 23.3333 14.5 23.3333C12.8622 23.3333 11.7722 23.0555 11.23 22.5C10.6878 21.9444 9.91668 21.6667 8.91668 21.6667C7.91668 21.6667 7.13223 21.9444 6.56334 22.5C5.99445 23.0555 4.91779 23.3333 3.33334 23.3333ZM3.33334 16.6667V13.3333C4.3889 13.3333 5.1739 13.0555 5.68834 12.5C6.20279 11.9444 7.2789 11.6667 8.91668 11.6667C10.5 11.6667 11.5628 11.9444 12.105 12.5C12.6472 13.0555 13.4178 13.3333 14.4167 13.3333C15.4722 13.3333 16.2567 13.0555 16.77 12.5C17.2833 11.9444 18.36 11.6667 20 11.6667C21.5833 11.6667 22.6528 11.9444 23.2083 12.5C23.7639 13.0555 24.5278 13.3333 25.5 13.3333C26.5556 13.3333 27.34 13.0555 27.8533 12.5C28.3667 11.9444 29.4433 11.6667 31.0833 11.6667C32.6667 11.6667 33.7433 11.9444 34.3133 12.5C34.8833 13.0555 35.6678 13.3333 36.6667 13.3333V16.6667C35.0278 16.6667 33.9372 16.3889 33.395 15.8333C32.8528 15.2778 32.0822 15 31.0833 15C30.0845 15 29.3278 15.2778 28.8133 15.8333C28.2989 16.3889 27.2222 16.6667 25.5833 16.6667C24 16.6667 22.9239 16.3889 22.355 15.8333C21.7861 15.2778 21.0011 15 20 15C18.9445 15 18.1733 15.2778 17.6867 15.8333C17.2 16.3889 16.1378 16.6667 14.5 16.6667C12.8622 16.6667 11.7722 16.3889 11.23 15.8333C10.6878 15.2778 9.91668 15 8.91668 15C7.91668 15 7.13223 15.2778 6.56334 15.8333C5.99445 16.3889 4.91779 16.6667 3.33334 16.6667Z" fill="#211F29"/>
          </svg>
        </div>
      ))}
    </div>
  );
}

export default Cards;